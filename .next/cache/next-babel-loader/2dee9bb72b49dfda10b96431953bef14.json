{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Blake Geist\\\\Documents\\\\blakes-apps\\\\react\\\\next-firebase-boiler\\\\src\\\\app\\\\components\\\\ModalLogin.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport clientCredentials from \"../credentials/client\";\nimport Router from \"next/router\";\nimport { compose, withState } from \"recompose\";\nimport AuthForm from \"./AuthForm\";\nimport { connect } from \"react-redux\";\nimport cookie from \"js-cookie\";\n\nvar LoginBase = function LoginBase(_ref) {\n  var setState = _ref.setState,\n      state = _ref.state,\n      dispatch = _ref.dispatch,\n      lang = _ref.lang;\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(clientCredentials);\n  }\n\n  ;\n  var email = state.email,\n      password = state.password,\n      isLoading = state.isLoading,\n      errorMessage = state.errorMessage;\n\n  var handleChange = function handleChange(event) {\n    var tempObj = _objectSpread({}, state);\n\n    tempObj[event.target.name] = event.target.value;\n    setState(tempObj);\n  };\n\n  function updateState(item, payload) {\n    var tempObj = _objectSpread({}, state);\n\n    tempObj[item] = payload;\n    setState(tempObj);\n  }\n\n  var handleEmailPassAuth = function handleEmailPassAuth(e) {\n    e.preventDefault();\n    updateState(\"isLoading\", true);\n    var email = state.email,\n        password = state.password;\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      response.user.getIdToken().then(function (token) {\n        //dispatch({ type: 'SET_ITEM', name: 'user', payload: user });\n        // eslint-disable-next-line no-undef\n        cookie.set(\"token2\", token, {\n          expires: 1\n        });\n        dispatch({\n          type: \"SET_ITEM\",\n          name: \"modalTarget\",\n          payload: null\n        });\n      });\n      dispatch({\n        type: \"SET_ITEM\",\n        name: \"user\",\n        payload: response.user\n      });\n      dispatch({\n        type: \"SET_ITEM\",\n        name: \"isLoggedIn\",\n        payload: true\n      });\n    })[\"catch\"](function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      updateState(\"isLoading\", false);\n\n      if (errorCode === \"auth/user-not-found\") {\n        errorMessage = \"User not found please register\";\n      }\n\n      updateState(\"errorMessage\", errorMessage);\n    });\n  };\n\n  return __jsx(AuthForm, {\n    errorMessage: errorMessage,\n    email: email,\n    password: password,\n    handleEmailPassAuth: handleEmailPassAuth,\n    handleChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  });\n};\n\nvar Login = compose(withState(\"state\", \"setState\", {\n  email: \"\",\n  password: \"\",\n  isLoading: false,\n  errorMessage: \"\"\n}))(LoginBase);\nexport default connect(function (state) {\n  return state;\n})(Login);","map":{"version":3,"sources":["C:/Users/Blake Geist/Documents/blakes-apps/react/next-firebase-boiler/src/app/components/ModalLogin.js"],"names":["React","firebase","clientCredentials","Router","compose","withState","AuthForm","connect","cookie","LoginBase","setState","state","dispatch","lang","apps","length","initializeApp","email","password","isLoading","errorMessage","handleChange","event","tempObj","target","name","value","updateState","item","payload","handleEmailPassAuth","e","preventDefault","auth","signInWithEmailAndPassword","then","response","user","getIdToken","token","set","expires","type","error","errorCode","code","message","Login"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport clientCredentials from \"../credentials/client\";\r\nimport Router from \"next/router\";\r\nimport { compose, withState } from \"recompose\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport { connect } from \"react-redux\";\r\nimport cookie from \"js-cookie\";\r\n\r\nconst LoginBase = ({ setState, state, dispatch, lang }) => {\r\n\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(clientCredentials);\r\n    };\r\n\r\n    const { email, password, isLoading, errorMessage } = state;\r\n\r\n    const handleChange = (event) => {\r\n        let tempObj = {\r\n            ...state\r\n        };\r\n        tempObj[event.target.name] = event.target.value;\r\n        setState(tempObj);\r\n    };\r\n\r\n    function updateState(item, payload) {\r\n        let tempObj = {\r\n            ...state\r\n        };\r\n        tempObj[item] = payload;\r\n        setState(tempObj);\r\n    }\r\n\r\n    const handleEmailPassAuth = (e) => {\r\n        e.preventDefault();\r\n        updateState(\"isLoading\", true);\r\n        const {email, password} = state;\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                response.user\r\n                    .getIdToken()\r\n                    .then(token => {\r\n                        //dispatch({ type: 'SET_ITEM', name: 'user', payload: user });\r\n                        // eslint-disable-next-line no-undef\r\n                        cookie.set(\"token2\", token, { expires: 1 });\r\n                        dispatch({ type: \"SET_ITEM\", name: \"modalTarget\", payload: null });\r\n                    });      \r\n                dispatch({ type: \"SET_ITEM\", name: \"user\", payload: response.user });\r\n                dispatch({ type: \"SET_ITEM\", name: \"isLoggedIn\", payload: true });\r\n            })\r\n            .catch(function(error) {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                updateState(\"isLoading\", false);\r\n                if(errorCode === \"auth/user-not-found\"){\r\n                    errorMessage = \"User not found please register\";\r\n                }\r\n                updateState(\"errorMessage\", errorMessage);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <AuthForm\r\n            errorMessage={errorMessage}\r\n            email={email}\r\n            password={password}\r\n            handleEmailPassAuth={handleEmailPassAuth}\r\n            handleChange={handleChange}\r\n        />\r\n    );\r\n};\r\n\r\nconst Login = compose(\r\n    withState(\"state\", \"setState\", {email: \"\", password: \"\", isLoading: false, errorMessage: \"\"})\r\n)(LoginBase);\r\n\r\nexport default connect(state => state)(Login);\r\n"]},"metadata":{},"sourceType":"module"}