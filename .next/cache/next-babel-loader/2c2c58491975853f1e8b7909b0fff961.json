{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Blake Geist\\\\Documents\\\\blakes-apps\\\\react\\\\next-firebase-boiler\\\\src\\\\app\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport withReduxStore from \"../lib/reducers\";\nimport { Provider } from \"react-redux\";\nimport setUserState from \"./helpers/setUserState\";\nimport redirectIfNoLanguage from \"./helpers/redirectIfNoLanguage\";\nimport getPageStrings from \"./helpers/getPageStrings\";\nimport getGlobalStrings from \"./helpers/getGlobalStrings\";\nimport Head from 'next/head';\n\nconst MyApp = ({\n  Component,\n  pageProps,\n  reduxStore\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: reduxStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }))));\n};\n\nMyApp.getInitialProps = async ({\n  Component,\n  ctx\n}) => {\n  if (ctx.req) {\n    await redirectIfNoLanguage(ctx);\n    await setUserState(ctx);\n  }\n\n  await getPageStrings(ctx);\n  await getGlobalStrings(ctx);\n  ctx.reduxStore.dispatch({\n    type: \"SET_ITEM\",\n    name: \"lang\",\n    payload: ctx.query.lang\n  });\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n  return {\n    pageProps\n  };\n};\n\nexport default withReduxStore(MyApp);","map":{"version":3,"sources":["C:/Users/Blake Geist/Documents/blakes-apps/react/next-firebase-boiler/src/app/pages/_app.js"],"names":["React","withReduxStore","Provider","setUserState","redirectIfNoLanguage","getPageStrings","getGlobalStrings","Head","MyApp","Component","pageProps","reduxStore","getInitialProps","ctx","req","dispatch","type","name","payload","query","lang"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAA0C;AACpD,SACI,4BACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ,CADJ;AAOH,CARD;;AAUAF,KAAK,CAACI,eAAN,GAAwB,OAAO;AAAEH,EAAAA,SAAF;AAAaI,EAAAA;AAAb,CAAP,KAA8B;AAClD,MAAIA,GAAG,CAACC,GAAR,EAAY;AACR,UAAMV,oBAAoB,CAACS,GAAD,CAA1B;AACA,UAAMV,YAAY,CAACU,GAAD,CAAlB;AACD;;AACD,QAAMR,cAAc,CAACQ,GAAD,CAApB;AACA,QAAMP,gBAAgB,CAACO,GAAD,CAAtB;AACAA,EAAAA,GAAG,CAACF,UAAJ,CAAeI,QAAf,CAAwB;AAAEC,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,IAAI,EAAE,MAA1B;AAAkCC,IAAAA,OAAO,EAAEL,GAAG,CAACM,KAAJ,CAAUC;AAArD,GAAxB;AACA,QAAMV,SAAS,GAAGD,SAAS,CAACG,eAAV,GAA4B,MAAMH,SAAS,CAACG,eAAV,CAA0BC,GAA1B,CAAlC,GAAmE,EAArF;AACA,SAAO;AAAEH,IAAAA;AAAF,GAAP;AACL,CAVD;;AAYA,eAAeT,cAAc,CAACO,KAAD,CAA7B","sourcesContent":["import React from \"react\";\r\nimport withReduxStore from \"../lib/reducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport setUserState from \"./helpers/setUserState\";\r\nimport redirectIfNoLanguage from \"./helpers/redirectIfNoLanguage\";\r\nimport getPageStrings from \"./helpers/getPageStrings\";\r\nimport getGlobalStrings from \"./helpers/getGlobalStrings\";\r\nimport Head from 'next/head'\r\n\r\nconst MyApp = ({ Component, pageProps, reduxStore }) => {\r\n    return (\r\n        <>\r\n            <Provider store={reduxStore}>\r\n                <Component {...pageProps} />\r\n            </Provider>\r\n        </>\r\n    );\r\n};\r\n\r\nMyApp.getInitialProps = async ({ Component, ctx }) => {\r\n    if (ctx.req){\r\n        await redirectIfNoLanguage(ctx)\r\n        await setUserState(ctx)\r\n      }\r\n      await getPageStrings(ctx)\r\n      await getGlobalStrings(ctx)\r\n      ctx.reduxStore.dispatch({ type: \"SET_ITEM\", name: \"lang\", payload: ctx.query.lang });    \r\n      const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n      return { pageProps };\r\n};\r\n\r\nexport default withReduxStore(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}