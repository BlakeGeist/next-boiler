{"ast":null,"code":"import axios from 'axios';\nimport absoluteUrl from './getAbsoluteUrl';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nexport default (async ctx => {\n  const {\n    apiURL\n  } = absoluteUrl(ctx.req);\n  const {\n    token2\n  } = nextCookie(ctx);\n  const getUserResponse = await axios.post(`${apiURL}/api/getUserFromToken`, {\n    token: token2\n  });\n  const user = getUserResponse.data.user;\n  user ? ctx.reduxStore.dispatch({\n    type: \"SET_ITEM\",\n    name: \"user\",\n    payload: user\n  }) : cookie.remove('token2');\n  user ? ctx.reduxStore.dispatch({\n    type: \"SET_ITEM\",\n    name: \"isLoggedIn\",\n    payload: true\n  }) : \"\";\n});","map":{"version":3,"sources":["C:/Users/Blake Geist/Documents/blakes-apps/react/next-firebase-boiler/src/app/pages/helpers/setUserState.js"],"names":["axios","absoluteUrl","nextCookie","cookie","ctx","apiURL","req","token2","getUserResponse","post","token","user","data","reduxStore","dispatch","type","name","payload","remove"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,gBAAe,MAAOC,GAAP,IAAe;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,WAAW,CAACG,GAAG,CAACE,GAAL,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaL,UAAU,CAACE,GAAD,CAA7B;AACA,QAAMI,eAAe,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAY,GAAEJ,MAAO,uBAArB,EAA6C;AAACK,IAAAA,KAAK,EAAEH;AAAR,GAA7C,CAA9B;AACA,QAAMI,IAAI,GAAGH,eAAe,CAACI,IAAhB,CAAqBD,IAAlC;AACCA,EAAAA,IAAD,GAASP,GAAG,CAACS,UAAJ,CAAeC,QAAf,CAAwB;AAAEC,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,IAAI,EAAE,MAA1B;AAAkCC,IAAAA,OAAO,EAAEN;AAA3C,GAAxB,CAAT,GAAsFR,MAAM,CAACe,MAAP,CAAc,QAAd,CAAtF;AACCP,EAAAA,IAAD,GAASP,GAAG,CAACS,UAAJ,CAAeC,QAAf,CAAwB;AAAEC,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,IAAI,EAAE,YAA1B;AAAwCC,IAAAA,OAAO,EAAE;AAAjD,GAAxB,CAAT,GAA4F,EAA5F;AACH,CAPD","sourcesContent":["import axios from 'axios'\r\nimport absoluteUrl from './getAbsoluteUrl'\r\nimport nextCookie from 'next-cookies'\r\nimport cookie from 'js-cookie'\r\n\r\nexport default async (ctx) => {\r\n    const { apiURL } = absoluteUrl(ctx.req)\r\n    const { token2 } = nextCookie(ctx)\r\n    const getUserResponse = await axios.post(`${apiURL}/api/getUserFromToken`, {token: token2})\r\n    const user = getUserResponse.data.user;\r\n    (user) ? ctx.reduxStore.dispatch({ type: \"SET_ITEM\", name: \"user\", payload: user }) : cookie.remove('token2');\r\n    (user) ? ctx.reduxStore.dispatch({ type: \"SET_ITEM\", name: \"isLoggedIn\", payload: true }) : \"\";\r\n}"]},"metadata":{},"sourceType":"module"}