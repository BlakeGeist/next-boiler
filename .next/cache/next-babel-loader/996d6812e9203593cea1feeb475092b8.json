{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Field } from \"formik\";\nimport { translate } from \"../helpers/quickHelpers\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nvar NewsLetterForm = function NewsLetterForm(_ref) {\n  var user = _ref.user,\n      lang = _ref.lang,\n      strings = _ref.strings;\n  var initalEmail = user.email || '';\n  return __jsx(Formik, {\n    initialValues: {\n      email: initalEmail\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        errors.email = \"Required\";\n      }\n\n      return errors;\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setSubmitting, payload;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref2.setSubmitting;\n                payload = {\n                  email: values.email\n                };\n\n                if (user.uid) {\n                  payload.uid = user.uid;\n                }\n\n                _context.next = 5;\n                return axios.post(\"/api/addEmailToNewsLetter\", payload);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        touched = _ref4.touched,\n        handleSubmit = _ref4.handleSubmit,\n        isSubmitting = _ref4.isSubmitting;\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"jsx-1547168735\"\n    }, __jsx(\"div\", {\n      className: \"jsx-1547168735\"\n    }, translate(\"SIGN-UP-FOR-OUR-NEWSLETTER\", strings, lang)), __jsx(\"div\", {\n      className: \"jsx-1547168735\" + \" \" + \"newsLetter-inputs\"\n    }, __jsx(\"label\", {\n      className: \"jsx-1547168735\"\n    }, __jsx(Field, {\n      name: \"email\",\n      className: \"form-input\",\n      placeholder: translate(\"EMAIL\", strings, lang)\n    }), errors.email && touched.email && errors.email), __jsx(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      className: \"jsx-1547168735\"\n    }, translate(\"SUBMIT\", strings, lang))), __jsx(_JSXStyle, {\n      id: \"1547168735\"\n    }, [\"form.jsx-1547168735{text-align:left;}\", \".newsLetter-inputs.jsx-1547168735{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\"]));\n  });\n};\n\nexport default connect(function (state) {\n  return state;\n})(NewsLetterForm);","map":null,"metadata":{},"sourceType":"module"}