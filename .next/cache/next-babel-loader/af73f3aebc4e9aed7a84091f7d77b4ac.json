{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport clientCredentials from \"../../credentials/client\";\nexport default (async ctx => {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(clientCredentials);\n  }\n\n  ;\n  const db = firebase.app().firestore();\n  const usersRef2 = db.collection(\"strings\").doc(\"global\");\n  await usersRef2.get().then(async docSnapshot => {\n    if (docSnapshot.exists) {\n      let strings = db.collection(\"strings\").doc(\"global\").collection(\"strings\");\n      await strings.get().then(snap => {\n        strings = snap.docs.map(d => {\n          return {\n            [d.id]: d.data()\n          };\n        });\n\n        const objectizedStrings = _Object$assign({}, ...strings);\n\n        ctx.reduxStore.dispatch({\n          type: \"SET_ITEM\",\n          name: \"strings\",\n          payload: objectizedStrings\n        });\n      }).catch(e => {});\n    } else {}\n  });\n});","map":null,"metadata":{},"sourceType":"module"}