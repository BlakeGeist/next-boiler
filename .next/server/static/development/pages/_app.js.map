{"version":3,"file":"static\\development\\pages\\_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./credentials/client.js","webpack:///./helpers/_getAbsoluteUrl.js","webpack:///./helpers/_getGlobalStrings.js","webpack:///./helpers/_getPageStrings.js","webpack:///./helpers/_setUserState.js","webpack:///./helpers/redirectIfNoLanguage.js","webpack:///./lib/reducers.js","webpack:///./pages/_app.js","webpack:///./store.js","webpack:///external \"axios\"","webpack:///external \"firebase/app\"","webpack:///external \"firebase/auth\"","webpack:///external \"firebase/firestore\"","webpack:///external \"js-cookie\"","webpack:///external \"next-cookies\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = {\r\n    // paste your firebase config here:\r\n    apiKey: \"AIzaSyCCVcObmhVvlRj4j2NdMJqmUeGVRuVF7qY\",\r\n    authDomain: \"next-firebase-boiler.firebaseapp.com\",\r\n    databaseURL: \"https://next-firebase-boiler.firebaseio.com\",\r\n    projectId: \"next-firebase-boiler\",\r\n    storageBucket: \"next-firebase-boiler.appspot.com\",\r\n    messagingSenderId: \"10012920341\",\r\n    appId: \"1:10012920341:web:14cd40691b942ed14f1c1c\"\r\n};\r\n","function absoluteUrl (req, setLocalhost) {\r\n    var protocol = \"https:\";\r\n    var host = req ? req.headers.host : window.location.hostname;\r\n    if (host.indexOf(\"localhost\") > -1) {\r\n        if (setLocalhost) host = setLocalhost;\r\n        protocol = \"http:\";\r\n    }\r\n  \r\n    return {\r\n        protocol: protocol,\r\n        host: host,\r\n        apiURL: `${protocol}//${host}`\r\n    };\r\n}\r\n\r\nexport default absoluteUrl;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport clientCredentials from \"../credentials/client\";\r\n\r\nexport default async (ctx) => {\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(clientCredentials);\r\n    };\r\n    const db = firebase.app().firestore();\r\n    const usersRef2 = db.collection(\"strings\").doc(\"global\");\r\n    await usersRef2.get()\r\n        .then(async (docSnapshot) => {\r\n            if (docSnapshot.exists) {\r\n                let strings = db.collection(\"strings\").doc(\"global\").collection(\"strings\");\r\n                await strings.get()\r\n                    .then(snap =>{\r\n                        strings = snap.docs.map(d => {\r\n                            return {\r\n                                [d.id]: d.data()\r\n                            };\r\n                        });\r\n                        const objectizedStrings = Object.assign({}, ...strings);\r\n                        ctx.reduxStore.dispatch({ type: \"SET_ITEM\", name: \"strings\", payload:  objectizedStrings});\r\n                    })\r\n                    .catch(e => {\r\n                    });\r\n            } else {\r\n            }\r\n        });    \r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport clientCredentials from \"../credentials/client\";\r\n\r\nexport default async (ctx) => {\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(clientCredentials);\r\n    };\r\n    const db = firebase.app().firestore();\r\n    const pathWithoutLang = ctx.asPath.replace(`/${ctx.query.lang}/`, \"\").replace(\"/\",\"-\");\r\n    const usersRef = db.collection(\"strings\").doc(\"global\");\r\n    await usersRef.get()\r\n        .then(async (docSnapshot) => {\r\n            if (docSnapshot.exists) {\r\n                let pageStrings = db.collection(\"strings\").doc(pathWithoutLang).collection(\"strings\");\r\n                await pageStrings.get()\r\n                    .then(snap =>{\r\n                        pageStrings = snap.docs.map(d => {\r\n                            return {\r\n                                [d.id]: d.data()\r\n                            };\r\n                        });\r\n                        const objectizedStrings = Object.assign({}, ...pageStrings);\r\n                        ctx.reduxStore.dispatch({ type: \"SET_ITEM\", name: \"pageStrings\", payload:  objectizedStrings});\r\n                    })\r\n            } else {\r\n            }\r\n        });\r\n};\r\n","import axios from 'axios'\r\nimport absoluteUrl from './_getAbsoluteUrl'\r\nimport nextCookie from 'next-cookies'\r\nimport cookie from 'js-cookie'\r\n\r\nexport default async (ctx) => {\r\n    const { apiURL } = absoluteUrl(ctx.req)\r\n    const { token2 } = nextCookie(ctx)\r\n    const getUserResponse = await axios.post(`${apiURL}/api/getUserFromToken`, {token: token2})\r\n    const user = getUserResponse.data.user;\r\n    (user) ? ctx.reduxStore.dispatch({ type: \"SET_ITEM\", name: \"user\", payload: user }) : cookie.remove('token2');\r\n    (user) ? ctx.reduxStore.dispatch({ type: \"SET_ITEM\", name: \"isLoggedIn\", payload: true }) : \"\";\r\n}\r\n","export default (ctx) => {\r\n    const headers = ctx.req.headers;\r\n    const userRegionLang = headers[\"accept-language\"].split(\",\")[0].split(\"-\");\r\n    const userLang = userRegionLang[0];\r\n    const userRegion = userRegionLang[1].toLowerCase();    \r\n    if (ctx.res && ctx.asPath === '/') {\r\n        ctx.res.writeHead(301, {\r\n            Location: `/${userLang}`,\r\n            // Add the content-type for SEO considerations\r\n            'Content-Type': 'text/html; charset=utf-8',\r\n        })\r\n        ctx.res.end()\r\n    }\r\n}","import React from \"react\";\r\nimport { initializeStore } from \"../store\";\r\n\r\nconst isServer = typeof window === \"undefined\";\r\nconst __NEXT_REDUX_STORE__ = \"__NEXT_REDUX_STORE__\";\r\n\r\nfunction getOrCreateStore (initialState) {\r\n    // Always make a new store if server, otherwise state is shared between requests\r\n    if (isServer) {\r\n        return initializeStore(initialState);\r\n    }\r\n\r\n    // Create store if unavailable on the client and set it on the window object\r\n    if (!window[__NEXT_REDUX_STORE__]) {\r\n        window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\r\n    }\r\n    return window[__NEXT_REDUX_STORE__];\r\n}\r\n\r\nexport default App => {\r\n    return class AppWithRedux extends React.Component {\r\n        static async getInitialProps (appContext) {\r\n            // Get or Create the store with `undefined` as initialState\r\n            // This allows you to set a custom default initialState\r\n            const reduxStore = getOrCreateStore();\r\n\r\n            // Provide the store to getInitialProps of pages\r\n            appContext.ctx.reduxStore = reduxStore;\r\n\r\n            let appProps = {};\r\n            if (typeof App.getInitialProps === \"function\") {\r\n                appProps = await App.getInitialProps(appContext);\r\n            }\r\n\r\n            return {\r\n                ...appProps,\r\n                initialReduxState: reduxStore.getState()\r\n            };\r\n        }\r\n\r\n        constructor (props) {\r\n            super(props);\r\n            this.reduxStore = getOrCreateStore(props.initialReduxState);\r\n        }\r\n\r\n        render () {\r\n            return <App {...this.props} reduxStore={this.reduxStore} />;\r\n        }\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport withReduxStore from \"../lib/reducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport setUserState from \"../helpers/_setUserState\";\r\nimport redirectIfNoLanguage from \"../helpers/redirectIfNoLanguage\";\r\nimport getPageStrings from \"../helpers/_getPageStrings\";\r\nimport getGlobalStrings from \"../helpers/_getGlobalStrings\";\r\nimport Head from 'next/head'\r\n\r\nconst MyApp = ({ Component, pageProps, reduxStore }) => {\r\n    return (\r\n        <>\r\n            <Provider store={reduxStore}>\r\n                <Component {...pageProps} />\r\n            </Provider>\r\n        </>\r\n    );\r\n};\r\n\r\nMyApp.getInitialProps = async ({ Component, ctx }) => {\r\n    if (ctx.req){\r\n        await redirectIfNoLanguage(ctx)\r\n        await setUserState(ctx)\r\n      }\r\n      await getPageStrings(ctx)\r\n      await getGlobalStrings(ctx)\r\n      ctx.reduxStore.dispatch({ type: \"SET_ITEM\", name: \"lang\", payload: ctx.query.lang });    \r\n      const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n      return { pageProps };\r\n};\r\n\r\nexport default withReduxStore(MyApp);\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst exampleInitialState = {\r\n    isLoading: false,\r\n    modalTarget: null,\r\n    lang: \"en\",\r\n    strings: {},\r\n    pageStrings: {},\r\n    isLoggedIn: false,\r\n    user: {}\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_ITEM: \"SET_ITEM\"\r\n};\r\n\r\n// REDUCERS\r\nexport const reducer = (state = exampleInitialState, action) => {\r\n    switch (action.type) {\r\n    case actionTypes.SET_ITEM: {\r\n        return Object.assign({}, state, {\r\n            [action.name]: action.payload\r\n        });\r\n    }\r\n    default: {\r\n        return state;\r\n    }\r\n    }\r\n};\r\n\r\n// ACTIONS\r\n/*\r\n    export const resetCount = () => {\r\n        return { type: actionTypes.RESET };\r\n    };\r\n*/\r\n\r\nexport function initializeStore (initialState = exampleInitialState) {\r\n    return createStore(\r\n        reducer,\r\n        initialState,\r\n        composeWithDevTools(applyMiddleware())\r\n    );\r\n}\r\n","module.exports = require(\"axios\");","module.exports = require(\"firebase/app\");","module.exports = require(\"firebase/auth\");","module.exports = require(\"firebase/firestore\");","module.exports = require(\"js-cookie\");","module.exports = require(\"next-cookies\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;ACZA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA5BA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AADA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AARA;AAUA;AACA;AAEA;;;;;;AAMA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;AC5CA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}